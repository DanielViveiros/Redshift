{"entities":[{"fqn":"/Community Queries","id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","parent_folder_id":"bb6de4af-1aad-493e-a9ee-b3e75cf58ed7","name":"Community Queries","entity_type":"FOLDER"},{"fqn":"/Community Queries/Redshift/Administrative Queries/Column compression by partial table name","id":"2b1bbcbd-29a3-4948-904e-ece7dc083349","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Column compression by partial table name","entity_type":"SQL_ENTITY","description":"Created from editor","content":"select schemaname, tablename, \"column\", type, encoding\r\nfrom pg_table_def\r\nwhere lower(tablename) like lower($partial_table_name)\r\norder by schemaname, tablename","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:26:16.686370Z","executed_count":2},{"fqn":"/Community Queries/Redshift/Administrative Queries/get DDL for a table","id":"3b5f77b7-dc50-4325-94a3-3913b18c6eba","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"get DDL for a table","entity_type":"SQL_ENTITY","description":"Created from editor","content":"\r\nwith tmp as\r\n(\r\n\r\nSELECT\r\n table_id\r\n ,REGEXP_REPLACE (schemaname, '^zzzzzzzz', '') AS schemaname\r\n ,REGEXP_REPLACE (tablename, '^zzzzzzzz', '') AS tablename\r\n ,seq\r\n ,ddl\r\nFROM\r\n (\r\n SELECT\r\n  table_id\r\n  ,schemaname\r\n  ,tablename\r\n  ,seq\r\n  ,ddl\r\n FROM\r\n  (\r\n  --DROP TABLE\r\n  SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,0 AS seq\r\n   ,'--DROP TABLE ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + ';' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r'\r\n  --CREATE TABLE\r\n  UNION SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,2 AS seq\r\n   ,'CREATE TABLE IF NOT EXISTS ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + '' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r'\r\n  --OPEN PAREN COLUMN LIST\r\n  UNION SELECT c.oid::bigint as table_id,n.nspname AS schemaname, c.relname AS tablename, 5 AS seq, '(' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r'\r\n  --COLUMN LIST\r\n  UNION SELECT\r\n   table_id\r\n   ,schemaname\r\n   ,tablename\r\n   ,seq\r\n   ,'\\t' + col_delim + col_name + ' ' + col_datatype + ' ' + col_nullable + ' ' + col_default + ' ' + col_encoding AS ddl\r\n  FROM\r\n   (\r\n   SELECT\r\n    c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n    ,c.relname AS tablename\r\n    ,100000000 + a.attnum AS seq\r\n    ,CASE WHEN a.attnum > 1 THEN ',' ELSE '' END AS col_delim\r\n    ,QUOTE_IDENT(a.attname) AS col_name\r\n    ,CASE WHEN STRPOS(UPPER(format_type(a.atttypid, a.atttypmod)), 'CHARACTER VARYING') > 0\r\n      THEN REPLACE(UPPER(format_type(a.atttypid, a.atttypmod)), 'CHARACTER VARYING', 'VARCHAR')\r\n     WHEN STRPOS(UPPER(format_type(a.atttypid, a.atttypmod)), 'CHARACTER') > 0\r\n      THEN REPLACE(UPPER(format_type(a.atttypid, a.atttypmod)), 'CHARACTER', 'CHAR')\r\n     ELSE UPPER(format_type(a.atttypid, a.atttypmod))\r\n     END AS col_datatype\r\n    ,CASE WHEN format_encoding((a.attencodingtype)::integer) = 'none'\r\n     THEN 'ENCODE RAW'\r\n     ELSE 'ENCODE ' + format_encoding((a.attencodingtype)::integer)\r\n     END AS col_encoding\r\n    ,CASE WHEN a.atthasdef IS TRUE THEN 'DEFAULT ' + adef.adsrc ELSE '' END AS col_default\r\n    ,CASE WHEN a.attnotnull IS TRUE THEN 'NOT NULL' ELSE '' END AS col_nullable\r\n   FROM pg_namespace AS n\r\n   INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n   INNER JOIN pg_attribute AS a ON c.oid = a.attrelid\r\n   LEFT OUTER JOIN pg_attrdef AS adef ON a.attrelid = adef.adrelid AND a.attnum = adef.adnum\r\n   WHERE c.relkind = 'r'\r\n     AND a.attnum > 0\r\n   ORDER BY a.attnum\r\n   )\r\n  --CONSTRAINT LIST\r\n  UNION (SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,200000000 + CAST(con.oid AS INT) AS seq\r\n   ,'\\t,' + pg_get_constraintdef(con.oid) AS ddl\r\n  FROM pg_constraint AS con\r\n  INNER JOIN pg_class AS c ON c.relnamespace = con.connamespace AND c.oid = con.conrelid\r\n  INNER JOIN pg_namespace AS n ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r' AND pg_get_constraintdef(con.oid) NOT LIKE 'FOREIGN KEY%'\r\n  ORDER BY seq)\r\n  --CLOSE PAREN COLUMN LIST\r\n  UNION SELECT c.oid::bigint as table_id,n.nspname AS schemaname, c.relname AS tablename, 299999999 AS seq, ')' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r'\r\n  --BACKUP\r\n  UNION SELECT\r\n  c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,300000000 AS seq\r\n   ,'BACKUP NO' as ddl\r\nFROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN (SELECT\r\n    SPLIT_PART(key,'_',5) id\r\n    FROM pg_conf\r\n    WHERE key LIKE 'pg_class_backup_%'\r\n    AND SPLIT_PART(key,'_',4) = (SELECT\r\n      oid\r\n      FROM pg_database\r\n      WHERE datname = current_database())) t ON t.id=c.oid\r\n  WHERE c.relkind = 'r'\r\n  --BACKUP WARNING\r\n  UNION SELECT\r\n  c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,1 AS seq\r\n   ,'--WARNING: This DDL inherited the BACKUP NO property from the source table' as ddl\r\nFROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN (SELECT\r\n    SPLIT_PART(key,'_',5) id\r\n    FROM pg_conf\r\n    WHERE key LIKE 'pg_class_backup_%'\r\n    AND SPLIT_PART(key,'_',4) = (SELECT\r\n      oid\r\n      FROM pg_database\r\n      WHERE datname = current_database())) t ON t.id=c.oid\r\n  WHERE c.relkind = 'r'\r\n  --DISTSTYLE\r\n  UNION SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,300000001 AS seq\r\n   ,CASE WHEN c.reldiststyle = 0 THEN 'DISTSTYLE EVEN'\r\n    WHEN c.reldiststyle = 1 THEN 'DISTSTYLE KEY'\r\n    WHEN c.reldiststyle = 8 THEN 'DISTSTYLE ALL'\r\n    WHEN c.reldiststyle = 9 THEN 'DISTSTYLE AUTO'\r\n    ELSE '<<Error - UNKNOWN DISTSTYLE>>'\r\n    END AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r'\r\n  --DISTKEY COLUMNS\r\n  UNION SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,400000000 + a.attnum AS seq\r\n   ,' DISTKEY (' + QUOTE_IDENT(a.attname) + ')' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN pg_attribute AS a ON c.oid = a.attrelid\r\n  WHERE c.relkind = 'r'\r\n    AND a.attisdistkey IS TRUE\r\n    AND a.attnum > 0\r\n  --SORTKEY COLUMNS\r\n  UNION select table_id,schemaname, tablename, seq,\r\n       case when min_sort <0 then 'INTERLEAVED SORTKEY (' else ' SORTKEY (' end as ddl\r\nfrom (SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,499999999 AS seq\r\n   ,min(attsortkeyord) min_sort FROM pg_namespace AS n\r\n  INNER JOIN  pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN pg_attribute AS a ON c.oid = a.attrelid\r\n  WHERE c.relkind = 'r'\r\n  AND abs(a.attsortkeyord) > 0\r\n  AND a.attnum > 0\r\n  group by 1,2,3,4 )\r\n  UNION (SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,500000000 + abs(a.attsortkeyord) AS seq\r\n   ,CASE WHEN abs(a.attsortkeyord) = 1\r\n    THEN '\\t' + QUOTE_IDENT(a.attname)\r\n    ELSE '\\t, ' + QUOTE_IDENT(a.attname)\r\n    END AS ddl\r\n  FROM  pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN pg_attribute AS a ON c.oid = a.attrelid\r\n  WHERE c.relkind = 'r'\r\n    AND abs(a.attsortkeyord) > 0\r\n    AND a.attnum > 0\r\n  ORDER BY abs(a.attsortkeyord))\r\n  UNION SELECT\r\n   c.oid::bigint as table_id\r\n   ,n.nspname AS schemaname\r\n   ,c.relname AS tablename\r\n   ,599999999 AS seq\r\n   ,'\\t)' AS ddl\r\n  FROM pg_namespace AS n\r\n  INNER JOIN  pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN  pg_attribute AS a ON c.oid = a.attrelid\r\n  WHERE c.relkind = 'r'\r\n    AND abs(a.attsortkeyord) > 0\r\n    AND a.attnum > 0\r\n  --END SEMICOLON\r\n  UNION SELECT c.oid::bigint as table_id ,n.nspname AS schemaname, c.relname AS tablename, 600000000 AS seq, ';' AS ddl\r\n  FROM  pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  WHERE c.relkind = 'r' \r\n  \r\n  UNION\r\n  --TABLE OWNERSHIP AS AN ALTER TABLE STATMENT\r\n  SELECT c.oid::bigint as table_id ,n.nspname AS schemaname, c.relname AS tablename, 600500000 AS seq, \r\n  'ALTER TABLE ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + ' owner to '+  QUOTE_IDENT(u.usename) +';' AS ddl\r\n  FROM  pg_namespace AS n\r\n  INNER JOIN pg_class AS c ON n.oid = c.relnamespace\r\n  INNER JOIN pg_user AS u ON c.relowner = u.usesysid\r\n  WHERE c.relkind = 'r'\r\n  \r\n  )\r\n  UNION (\r\n    SELECT c.oid::bigint as table_id,'zzzzzzzz' || n.nspname AS schemaname,\r\n       'zzzzzzzz' || c.relname AS tablename,\r\n       700000000 + CAST(con.oid AS INT) AS seq,\r\n       'ALTER TABLE ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + ' ADD ' + pg_get_constraintdef(con.oid)::VARCHAR(1024) + ';' AS ddl\r\n    FROM pg_constraint AS con\r\n      INNER JOIN pg_class AS c\r\n             ON c.relnamespace = con.connamespace\r\n             AND c.oid = con.conrelid\r\n      INNER JOIN pg_namespace AS n ON n.oid = c.relnamespace\r\n    WHERE c.relkind = 'r'\r\n    AND con.contype = 'f'\r\n    ORDER BY seq\r\n  )\r\n ORDER BY table_id,schemaname, tablename, seq\r\n )\r\n)\r\nselect ddl from tmp where lower(tablename) = lower($tablename)","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:26:47.428187Z","executed_count":6},{"fqn":"/Community Queries/Redshift/Administrative Queries/Deadlocks","id":"5c2d32a5-2757-41ac-bc36-f4beff112de0","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Deadlocks","entity_type":"SQL_ENTITY","description":"","content":"select \r\n  table_id, \r\n  last_update, \r\n  last_commit, \r\n  lock_owner_pid, \r\n  lock_status \r\nfrom stv_locks \r\norder by last_update asc","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:26:25.223384Z","executed_count":1},{"fqn":"/Community Queries/Redshift/Administrative Queries/get View dependency","id":"7c939731-5872-4e41-9256-94f609224f6a","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"get View dependency","entity_type":"SQL_ENTITY","description":"Created from editor","content":"SELECT \r\n  distinct tgtobj.relname as Depended_Object_name\r\nFROM\r\n    pg_catalog.pg_class AS srcobj\r\n    INNER JOIN pg_catalog.pg_depend AS srcdep\r\n        ON srcobj.oid = srcdep.refobjid\r\n    INNER JOIN pg_catalog.pg_depend AS tgtdep\r\n        ON srcdep.objid = tgtdep.objid\r\n    INNER JOIN pg_catalog.pg_class AS tgtobj\r\n        ON tgtdep.refobjid = tgtobj.oid\r\n        AND srcobj.oid <> tgtobj.oid\r\nWHERE \r\n  lower(srcobj.relname) = lower($view_name)\r\n  AND srcobj.relkind = 'v' --i=index, v=view, s=sequence","type":"QUERY","platform":"Snowflake","executed_at":"2019-08-29T08:54:47.427Z","executed_count":3},{"fqn":"/Community Queries/Redshift/Administrative Queries/get Constraints for an Object","id":"9532d886-9211-4451-9845-802f596d8772","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"get Constraints for an Object","entity_type":"SQL_ENTITY","description":"Created from editor","content":"SELECT DISTINCT\r\n    srcobj.oid AS src_oid\r\n    ,srcnsp.nspname AS src_schemaname\r\n    ,srcobj.relname AS src_objectname\r\n    ,tgtobj.oid AS dependent_oid\r\n    ,tgtnsp.nspname AS dependent_schemaname\r\n    ,tgtobj.relname AS dependent_objectname\r\n    ,con.conname AS constraint_name\r\nFROM\r\n    pg_catalog.pg_class AS srcobj\r\nINNER JOIN\r\n    pg_catalog.pg_namespace AS srcnsp\r\n        ON srcobj.relnamespace = srcnsp.oid\r\nINNER JOIN\r\n    pg_catalog.pg_constraint AS con\r\n        ON srcobj.oid = con.confrelid\r\nINNER JOIN\r\n    pg_catalog.pg_class AS tgtobj\r\n        ON tgtobj.oid = con.conrelid\r\nINNER JOIN\r\n    pg_catalog.pg_namespace AS tgtnsp\r\n        ON tgtobj.relnamespace = tgtnsp.oid\r\nWHERE\r\n  lower(srcobj.relname) = lower($object_name)","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:26:33.498014Z","executed_count":1},{"fqn":"/Community Queries/Redshift/Administrative Queries/Active queries","id":"98d0ef8c-3a6c-4db2-a0df-a7ce31411fd0","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Active queries","entity_type":"SQL_ENTITY","description":"","content":"select\r\n  userid\r\n  , query\r\n  , pid\r\n  , starttime\r\n  , left(text, 500) as text\r\nfrom \r\n  stv_inflight","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:25:55.032466Z","executed_count":2},{"fqn":"/Community Queries/Redshift/Administrative Queries/Active sessions","id":"a792bd71-f2af-4b0c-91e6-f925bf832710","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Active sessions","entity_type":"SQL_ENTITY","description":"Created from editor","content":"SELECT \r\n  s.process AS pid\r\n  , date_Trunc ('second',s.starttime) AS Session_started\r\n  , datediff(minutes,s.starttime,getdate ()) AS Session_minutes\r\n  , s.user_name AS Username\r\n  , s.db_name AS Database\r\n  , date_trunc('second', i.starttime) AS Query_started\r\n  , i.duration AS Query_duration\r\n  , i.query AS SQL_query\r\nFROM \r\n  stv_sessions s\r\n  LEFT JOIN stv_recents i\r\n    ON s.process = i.pid AND i.status = 'Running'\r\nWHERE \r\n  s.user_name != 'rdsdb'\r\n","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:26:02.757009Z","executed_count":1},{"fqn":"/Community Queries/Redshift/Administrative Queries","id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","parent_folder_id":"f817d4fd-5d49-4647-a6af-6c4c1481ecc7","name":"Administrative Queries","entity_type":"FOLDER"},{"fqn":"/Community Queries/Redshift/Administrative Queries/get information for COPY runs  for last N days","id":"c1828fd9-2605-45c7-b8ef-6e6154c9b251","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"get information for COPY runs  for last N days","entity_type":"SQL_ENTITY","description":"Created from editor","content":"select \r\n  q.starttime,\r\n  s.query, \r\n  substring(q.querytxt,1,120) as querytxt,\r\n  s.n_files, \r\n  size_mb, \r\n  s.time_seconds,\r\n  s.size_mb/decode(s.time_seconds,0,1,s.time_seconds)  as mb_per_s\r\nfrom \r\n  (\r\n    select \r\n      query, count(*) as n_files,\r\n      sum(transfer_size/(1024*1024)) as size_MB, \r\n      (max(end_Time) - min(start_Time))/(1000000) as time_seconds, \r\n      max(end_time) as end_time\r\n    from \r\n      stl_s3client \r\n    where \r\n      http_method = 'GET' \r\n      and query > 0\r\n      and transfer_time > 0 \r\n    group by query \r\n  ) as s\r\n  LEFT JOIN stl_Query as q on q.query = s.query\r\nwhere \r\n  q.starttime >=  dateadd(day, -$days, current_Date)\r\norder by \r\n  q.starttime desc, s.time_Seconds desc, size_mb desc, s.end_time desc","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:27:05.711548Z","executed_count":3},{"fqn":"/Community Queries/Redshift/Administrative Queries/Distribution and skew for all tables in database","id":"cf871d90-a2f3-4bfa-bd35-b18976d6a3ed","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Distribution and skew for all tables in database","entity_type":"SQL_ENTITY","description":"Shows information about distribution and skew for all tables in database","content":"select \r\n\ttable_id tableid,\r\n\t\"database\"||'.'||\"schema\"||'.'||\"table\" as object_name,\r\n\tsize size_mb,\r\n\t\"diststyle\" as diststyle_,\r\n\tsortkey1 as sortkey_,\r\n\tround(100*cast(max_blocks_per_slice - min_blocks_per_slice as float) / greatest(nvl (min_blocks_per_slice,0)::int,1),2) ratio_skew_across_slices,\r\n\tround(cast(100*dist_slice as float) /(select count(distinct slice) from stv_slices),2) pct_slices_populated\r\nfrom svv_table_info ti\r\ninner join (\r\n\t\tselect tbl,\r\n               min(c) min_blocks_per_slice,\r\n               max(c) max_blocks_per_slice,\r\n               count(distinct slice) dist_slice\r\n        from (select b.tbl,\r\n                     b.slice,\r\n                     count(*) as c\r\n              from stv_blocklist b\r\n              group by b.tbl, b.slice) r\r\n        where tbl in (select table_id from svv_table_info)\r\n        group by tbl\r\n) iq on iq.tbl = ti.table_id","type":"QUERY","platform":"Snowflake","executed_count":0},{"fqn":"/Community Queries/Redshift/Administrative Queries/Create Drop Table List from Partial Table Name","id":"d3a84133-be29-41bb-9f23-f2b2b67ba93b","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Create Drop Table List from Partial Table Name","entity_type":"SQL_ENTITY","description":"Generates DROP statements for any matching table name within a Redshift database.  Use directly by double-click on catalog item and hitting F5","content":"/* \nDescription:  This snippet reuses another snippet for finding tables and generates a DDL Drop statement for it.\nPlatform:  Redshift\nUsage:   [use directly -- double-click and hit F5]\nParameters: Parameters:  $partial_table_name pass in something like '%table%'.  The parameters are not case sensitive since we lower it.\nAuthor:  Jeff Schlitt Date:  6/19/2019\nChange Log:\n\n*/\nselect 'drop table ' + table_name + ';'\nfrom \n  (\n    @{/Community Queries/Redshift/Administrative Queries/Search for Tables by partial name - All schemas}\n  ) a\n  \n  ","type":"QUERY","platform":"Snowflake","executed_at":"2019-09-18T14:23:07.489562Z","executed_count":22},{"fqn":"/Community Queries/Redshift/Administrative Queries/Distribution and skew for the table","id":"f3bf9a04-c003-4e4a-ab01-a3ceb5e32e06","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"Distribution and skew for the table","entity_type":"SQL_ENTITY","description":"Shows information about distribution and skew for the particular table","content":"select \r\n\ttable_id tableid,\r\n\t\"database\"||'.'||\"schema\"||'.'||\"table\" as object_name,\r\n\tsize size_mb,\r\n\t\"diststyle\" as diststyle_,\r\n\tsortkey1 as sortkey_,\r\n\tround(100*cast(max_blocks_per_slice - min_blocks_per_slice as float) / greatest(nvl (min_blocks_per_slice,0)::int,1),2) ratio_skew_across_slices,\r\n\tround(cast(100*dist_slice as float) /(select count(distinct slice) from stv_slices),2) pct_slices_populated\r\nfrom svv_table_info ti\r\ninner join (\r\n\t\tselect tbl,\r\n               min(c) min_blocks_per_slice,\r\n               max(c) max_blocks_per_slice,\r\n               count(distinct slice) dist_slice\r\n        from (select b.tbl,\r\n                     b.slice,\r\n                     count(*) as c\r\n              from stv_blocklist b\r\n              group by b.tbl, b.slice) r\r\n        where tbl in (select table_id from svv_table_info)\r\n        group by tbl\r\n) iq on iq.tbl = ti.table_id\r\nwhere lower(\"schema\") = lower('' ||$SCHEMA_NAME|| '') and lower(\"table\") = lower(''||$TABLE_NAME||'')","type":"QUERY","platform":"Snowflake","executed_count":0},{"fqn":"/Community Queries/Redshift","id":"f817d4fd-5d49-4647-a6af-6c4c1481ecc7","parent_folder_id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","name":"Redshift","entity_type":"FOLDER"},{"fqn":"/Community Queries/Redshift/Administrative Queries/get DDL for a view","id":"fb96fa50-b88e-4a15-b6eb-f46cbf7aeffa","parent_folder_id":"b1dab408-6e1f-4303-aa9b-cb45f1a37eff","name":"get DDL for a view","entity_type":"SQL_ENTITY","description":"Created from editor","content":"SELECT \r\n    n.nspname AS schemaname\r\n    ,c.relname AS viewname\r\n    ,'--DROP VIEW ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + ';\\n'\r\n    + CASE \r\n     \tWHEN c.relnatts > 0 then 'CREATE OR REPLACE VIEW ' + QUOTE_IDENT(n.nspname) + '.' + QUOTE_IDENT(c.relname) + ' AS\\n' + COALESCE(pg_get_viewdef(c.oid, TRUE), '')\r\n     \tELSE  COALESCE(pg_get_viewdef(c.oid, TRUE), '') END AS ddl\r\nFROM \r\n    pg_catalog.pg_class AS c\r\nINNER JOIN\r\n    pg_catalog.pg_namespace AS n\r\n    ON c.relnamespace = n.oid\r\nWHERE \r\n  relkind = 'v'\r\n  and lower(c.relname) = lower($view_name)","type":"QUERY","platform":"Snowflake","executed_at":"2019-08-29T08:39:05.448Z","executed_count":1}]}